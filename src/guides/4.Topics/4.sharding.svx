---
title: Sharding
---
<script lang="ts">
    import Alert from '$lib/components/Alert.svelte';
</script>


# Sharding
Please keep in mind that sharding is a highly advanced topic! Sharding is only required on 2,500 servers; otherwise, Discord will not allow your bot to log in.

<Alert type='warning' title='WARNING'>
    This guide will only tackle the basics of sharding using Discord.js <a href="https://discordjs.dev/docs/packages/discord.js/main/ShardingManager:Class"><code>ShardingManager</code></a>.
</Alert>

## Reciple Sharding Setup

To use Reciple with sharding, you can use the `reciple shard` command to start the built-in sharding manager. Every command flags will be passed to the shard instance when supported.

```bash
reciple shard
```

You can configure the sharding manager by exporting a `sharding` object in your `reciple.mjs` config.

```js
// reciple.mjs

/**
 * @satisfies {import('reciple').RecipleConfigJS['sharding']}
 */
export const sharding = {
    mode: 'process',
};
```

<Alert type='warning' title='WARNING'>
    When using <code>worker</code> sharding mode, discord.js <code>ShardingManager</code> will not pass the command flags to the shard by default unless you modify the discord.js internal code.
</Alert>

## Worker Shard Temporary Fix

To fix the issue where the ShardingManager aren't passing the command flags to the shard, we will modify `discord.js`'s internal code using [`patch-package`](https://npmjs.org/package/patch-package).

```bash
npm i -D patch-package
```

Go to `./node_modules/discord.js/src/sharding/Shard.js` and modify the code at line `139` as follows:

```diff
- this.worker = new Worker(path.resolve(this.manager.file), { workerData: this.env })
+ this.worker = new Worker(path.resolve(this.manager.file), {
+     workerData: this.env,
+     env: this.env,
+     argv: this.args,
+     execArgv: this.execArgv
+ })
```

To apply the fix, run the following command in your terminal:

```bash
patch-package discord.js
```

Add a postinstall script in `package.json` to run `patch-package` again.

```json
{
    "scripts": {
        "postinstall": "patch-package"
    }
}
```