{
	"id": 0,
	"name": "Reciple - v3.1.2",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "Reciple",
	"children": [
		{
			"id": 415,
			"name": "RecipleCommandBuilderType",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Types of Reciple command builders"
					}
				]
			},
			"children": [
				{
					"id": 417,
					"name": "InteractionCommand",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/builders.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 416,
					"name": "MessageCommand",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/builders.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						417,
						416
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/types/builders.ts",
					"line": 16,
					"character": 12
				}
			]
		},
		{
			"id": 456,
			"name": "RecipleHaltedCommandReason",
			"kind": 8,
			"kindString": "Enumeration",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Command halt reasons"
					}
				]
			},
			"children": [
				{
					"id": 458,
					"name": "Cooldown",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					}
				},
				{
					"id": 457,
					"name": "Error",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": 0
					}
				},
				{
					"id": 459,
					"name": "InvalidArguments",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 460,
					"name": "MissingArguments",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 39,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": 3
					}
				},
				{
					"id": 462,
					"name": "MissingBotPermissions",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": 5
					}
				},
				{
					"id": 461,
					"name": "MissingMemberPermissions",
					"kind": 16,
					"kindString": "Enumeration Member",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						458,
						457,
						459,
						460,
						462,
						461
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/types/commands.ts",
					"line": 35,
					"character": 12
				}
			]
		},
		{
			"id": 8,
			"name": "CommandCooldownManager",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Stores cooled-down users"
					}
				]
			},
			"children": [
				{
					"id": 13,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1460,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1461,
							"character": 4
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1462,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 14,
							"name": "new CommandCooldownManager",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 15,
									"name": "arrayLength",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 8,
								"name": "CommandCooldownManager"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array<CooledDownUser>.constructor"
							}
						},
						{
							"id": 16,
							"name": "new CommandCooldownManager",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 17,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1,
											"name": "CooledDownUser"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 8,
								"name": "CommandCooldownManager"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Array<CooledDownUser>.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Array<CooledDownUser>.constructor"
					}
				},
				{
					"id": 18,
					"name": "add",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 25,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 19,
							"name": "add",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`CommandCooldownManager#push()`"
									}
								]
							},
							"parameters": [
								{
									"id": 20,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Cooled-down user data"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1,
											"name": "CooledDownUser"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 28,
					"name": "clean",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 66,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 29,
							"name": "clean",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Purge non cooled-down users from this array"
									}
								]
							},
							"parameters": [
								{
									"id": 30,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Clean cooldown options"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1,
														"name": "CooledDownUser"
													},
													{
														"type": "literal",
														"value": "expireTime"
													}
												],
												"name": "Omit",
												"qualifiedName": "Omit",
												"package": "typescript"
											}
										],
										"name": "Partial",
										"qualifiedName": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 31,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 78,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 32,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get someone's cooldown data"
									}
								]
							},
							"parameters": [
								{
									"id": 33,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Get cooldown data options"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1,
														"name": "CooledDownUser"
													},
													{
														"type": "literal",
														"value": "expireTime"
													}
												],
												"name": "Omit",
												"qualifiedName": "Omit",
												"package": "typescript"
											}
										],
										"name": "Partial",
										"qualifiedName": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 1,
										"name": "CooledDownUser"
									}
								]
							}
						}
					]
				},
				{
					"id": 25,
					"name": "isCooledDown",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 53,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 26,
							"name": "isCooledDown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if the given user is cooled-down"
									}
								]
							},
							"parameters": [
								{
									"id": 27,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to identify if user is on cooldown"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1,
														"name": "CooledDownUser"
													},
													{
														"type": "literal",
														"value": "expireTime"
													}
												],
												"name": "Omit",
												"qualifiedName": "Omit",
												"package": "typescript"
											}
										],
										"name": "Partial",
										"qualifiedName": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 21,
					"name": "remove",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 34,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 22,
							"name": "remove",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Remove cooldown from specific user, channel or guild"
									}
								]
							},
							"parameters": [
								{
									"id": 23,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Remove cooldown data options"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 1,
												"name": "CooledDownUser"
											}
										],
										"name": "Partial",
										"qualifiedName": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 24,
									"name": "limit",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Remove cooldown data limit"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 9,
					"name": "checkOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 87,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 10,
							"name": "checkOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if the options are valid"
									}
								]
							},
							"parameters": [
								{
									"id": 11,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to validated"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"id": 1,
														"name": "CooledDownUser"
													},
													{
														"type": "literal",
														"value": "expireTime"
													}
												],
												"name": "Omit",
												"qualifiedName": "Omit",
												"package": "typescript"
											}
										],
										"name": "Partial",
										"qualifiedName": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 12,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Cooled-down user data"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "CooledDownUser"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						13
					]
				},
				{
					"title": "Methods",
					"children": [
						18,
						28,
						31,
						25,
						21,
						9
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/CommandCooldownManager.ts",
					"line": 20,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 1,
							"name": "CooledDownUser"
						}
					],
					"name": "Array",
					"qualifiedName": "Array",
					"package": "typescript"
				}
			]
		},
		{
			"id": 265,
			"name": "InteractionCommandBuilder",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Reciple builder for interaction/slash command"
					}
				]
			},
			"children": [
				{
					"id": 266,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 267,
							"name": "new InteractionCommandBuilder",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 265,
								"name": "InteractionCommandBuilder"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "SlashCommandBuilder.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "SlashCommandBuilder.constructor"
					}
				},
				{
					"id": 272,
					"name": "allowExecuteInDM",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 25,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 268,
					"name": "builder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 21,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"id": 417,
						"name": "InteractionCommand"
					},
					"defaultValue": "RecipleCommandBuilderType.InteractionCommand"
				},
				{
					"id": 269,
					"name": "cooldown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 22,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 277,
					"name": "execute",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 27,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 278,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
									"line": 27,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 279,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 280,
											"name": "executeData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 261,
												"name": "InteractionCommandExecuteData"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Awaitable",
										"qualifiedName": "Awaitable",
										"package": "discord.js"
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 273,
					"name": "halt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 26,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 274,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
									"line": 26,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 275,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 276,
											"name": "haltData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 418,
												"typeArguments": [
													{
														"type": "reference",
														"id": 265,
														"name": "InteractionCommandBuilder"
													}
												],
												"name": "RecipleHaltedCommandData"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										],
										"name": "Awaitable",
										"qualifiedName": "Awaitable",
										"package": "discord.js"
									}
								}
							]
						}
					}
				},
				{
					"id": 270,
					"name": "requiredBotPermissions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "PermissionResolvable",
							"qualifiedName": "PermissionResolvable",
							"package": "discord.js"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 271,
					"name": "requiredMemberPermissions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 24,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "PermissionResolvable",
							"qualifiedName": "PermissionResolvable",
							"package": "discord.js"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 281,
					"name": "setCooldown",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 34,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 282,
							"name": "setCooldown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the execute cooldown for this command.\n- "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": " means no cooldown"
									}
								]
							},
							"parameters": [
								{
									"id": 283,
									"name": "cooldown",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Command cooldown in milliseconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 265,
								"name": "InteractionCommandBuilder"
							}
						}
					]
				},
				{
					"id": 296,
					"name": "setExecute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 70,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 297,
							"name": "setExecute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Function when the command is executed"
									}
								]
							},
							"parameters": [
								{
									"id": 298,
									"name": "execute",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to execute when the command is called"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 299,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
													"line": 70,
													"character": 31
												}
											],
											"signatures": [
												{
													"id": 300,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 301,
															"name": "executeData",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 261,
																"name": "InteractionCommandExecuteData"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 265,
								"name": "InteractionCommandBuilder"
							}
						}
					]
				},
				{
					"id": 290,
					"name": "setHalt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 61,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 291,
							"name": "setHalt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Function when the command is interupted"
									}
								]
							},
							"parameters": [
								{
									"id": 292,
									"name": "halt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to execute when command is halted"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 293,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
													"line": 61,
													"character": 26
												}
											],
											"signatures": [
												{
													"id": 294,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 295,
															"name": "haltData",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 418,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 265,
																		"name": "InteractionCommandBuilder"
																	}
																],
																"name": "RecipleHaltedCommandData"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																]
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 265,
								"name": "InteractionCommandBuilder"
							}
						}
					]
				},
				{
					"id": 284,
					"name": "setRequiredBotPermissions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 43,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 285,
							"name": "setRequiredBotPermissions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set required bot permissions to execute the command"
									}
								]
							},
							"parameters": [
								{
									"id": 286,
									"name": "permissions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Bot's required permissions"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "PermissionResolvable",
											"qualifiedName": "PermissionResolvable",
											"package": "discord.js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 265,
								"name": "InteractionCommandBuilder"
							}
						}
					]
				},
				{
					"id": 287,
					"name": "setRequiredMemberPermissions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 52,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 288,
							"name": "setRequiredMemberPermissions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set required permissions to execute the command"
									}
								]
							},
							"parameters": [
								{
									"id": 289,
									"name": "permissions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "User's return permissions"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "PermissionResolvable",
											"qualifiedName": "PermissionResolvable",
											"package": "discord.js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 265,
								"name": "InteractionCommandBuilder"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						266
					]
				},
				{
					"title": "Properties",
					"children": [
						272,
						268,
						269,
						277,
						273,
						270,
						271
					]
				},
				{
					"title": "Methods",
					"children": [
						281,
						296,
						290,
						284,
						287
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
					"line": 20,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "SlashCommandBuilder",
					"qualifiedName": "SlashCommandBuilder",
					"package": "@discordjs/builders"
				}
			]
		},
		{
			"id": 318,
			"name": "MessageCommandBuilder",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Reciple builder for message command"
					}
				]
			},
			"children": [
				{
					"id": 319,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 320,
							"name": "new MessageCommandBuilder",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 318,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 325,
					"name": "aliases",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 40,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 331,
					"name": "allowExecuteByBots",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 46,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 330,
					"name": "allowExecuteInDM",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 45,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 321,
					"name": "builder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 36,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"id": 416,
						"name": "MessageCommand"
					},
					"defaultValue": "RecipleCommandBuilderType.MessageCommand"
				},
				{
					"id": 323,
					"name": "cooldown",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 38,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 324,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 39,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "''"
				},
				{
					"id": 336,
					"name": "execute",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 48,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 337,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
									"line": 48,
									"character": 20
								}
							],
							"signatures": [
								{
									"id": 338,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 339,
											"name": "executeData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 306,
												"name": "MessageCommandExecuteData"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 332,
					"name": "halt",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 47,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 333,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
									"line": 47,
									"character": 18
								}
							],
							"signatures": [
								{
									"id": 334,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 335,
											"name": "haltData",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"id": 418,
												"typeArguments": [
													{
														"type": "reference",
														"id": 318,
														"name": "MessageCommandBuilder"
													}
												],
												"name": "RecipleHaltedCommandData"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "void"
													}
												]
											}
										],
										"name": "Awaitable",
										"qualifiedName": "Awaitable",
										"package": "discord.js"
									}
								}
							]
						}
					}
				},
				{
					"id": 322,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 37,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "''"
				},
				{
					"id": 326,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 41,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 388,
							"name": "MessageCommandOptionBuilder"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 328,
					"name": "requiredBotPermissions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 43,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "PermissionResolvable",
							"qualifiedName": "PermissionResolvable",
							"package": "discord.js"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 329,
					"name": "requiredMemberPermissions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 44,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "PermissionResolvable",
							"qualifiedName": "PermissionResolvable",
							"package": "discord.js"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 327,
					"name": "validateOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 42,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 349,
					"name": "addAliases",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 84,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 350,
							"name": "addAliases",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add aliases to the command"
									}
								]
							},
							"parameters": [
								{
									"id": 351,
									"name": "aliases",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Command aliases"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 318,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 376,
					"name": "addOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 154,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 377,
							"name": "addOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add option to the command"
									}
								]
							},
							"parameters": [
								{
									"id": 378,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Message option builder"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"id": 388,
												"name": "MessageCommandOptionBuilder"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 379,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
															"line": 154,
															"character": 58
														}
													],
													"signatures": [
														{
															"id": 380,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 381,
																	"name": "constructor",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"id": 388,
																		"name": "MessageCommandOptionBuilder"
																	}
																}
															],
															"type": {
																"type": "reference",
																"id": 388,
																"name": "MessageCommandOptionBuilder"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 318,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 385,
					"name": "getCommandOptionValues",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 182,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 386,
							"name": "getCommandOptionValues",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "validate given command options"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "use "
											},
											{
												"kind": "code",
												"text": "`validateMessageCommandOptions()`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 387,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Parsed message command data"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Command",
										"qualifiedName": "Command",
										"package": "fallout-utility"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 34,
								"name": "MessageCommandOptionManager"
							}
						}
					]
				},
				{
					"id": 361,
					"name": "setAllowExecuteByBots",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 125,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 362,
							"name": "setAllowExecuteByBots",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow command to be executed by bots"
									}
								]
							},
							"parameters": [
								{
									"id": 363,
									"name": "allowExecuteByBots",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the command can be executed by bots"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 318,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 358,
					"name": "setAllowExecuteInDM",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 115,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 359,
							"name": "setAllowExecuteInDM",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set if command can be executed in dms"
									}
								]
							},
							"parameters": [
								{
									"id": 360,
									"name": "allowExecuteInDM",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the command can execute in DMs"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 318,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 346,
					"name": "setCooldown",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 75,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 347,
							"name": "setCooldown",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the execute cooldown for this command.\n- "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": " means no cooldown"
									}
								]
							},
							"parameters": [
								{
									"id": 348,
									"name": "cooldown",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Command cooldown in milliseconds"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 318,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 343,
					"name": "setDescription",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 64,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 344,
							"name": "setDescription",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the command description"
									}
								]
							},
							"parameters": [
								{
									"id": 345,
									"name": "description",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Command description"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 318,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 370,
					"name": "setExecute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 144,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 371,
							"name": "setExecute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Function when the command is executed"
									}
								]
							},
							"parameters": [
								{
									"id": 372,
									"name": "execute",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to execute when the command is called"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 373,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
													"line": 144,
													"character": 31
												}
											],
											"signatures": [
												{
													"id": 374,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 375,
															"name": "executeData",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 306,
																"name": "MessageCommandExecuteData"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 318,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 364,
					"name": "setHalt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 135,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 365,
							"name": "setHalt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Function when the command is interupted"
									}
								]
							},
							"parameters": [
								{
									"id": 366,
									"name": "halt",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Function to execute when command is halted"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 367,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
													"line": 135,
													"character": 26
												}
											],
											"signatures": [
												{
													"id": 368,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 369,
															"name": "haltData",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"id": 418,
																"typeArguments": [
																	{
																		"type": "reference",
																		"id": 318,
																		"name": "MessageCommandBuilder"
																	}
																],
																"name": "RecipleHaltedCommandData"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																]
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 318,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 340,
					"name": "setName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 54,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 341,
							"name": "setName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the command name"
									}
								]
							},
							"parameters": [
								{
									"id": 342,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Command name"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 318,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 352,
					"name": "setRequiredBotPermissions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 97,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 353,
							"name": "setRequiredBotPermissions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set required bot permissions to execute the command"
									}
								]
							},
							"parameters": [
								{
									"id": 354,
									"name": "permissions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Bot's required permissions"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "PermissionResolvable",
											"qualifiedName": "PermissionResolvable",
											"package": "discord.js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 318,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 355,
					"name": "setRequiredMemberPermissions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 106,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 356,
							"name": "setRequiredMemberPermissions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set required permissions to execute the command"
									}
								]
							},
							"parameters": [
								{
									"id": 357,
									"name": "permissions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "User's return permissions"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "PermissionResolvable",
											"qualifiedName": "PermissionResolvable",
											"package": "discord.js"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 318,
								"name": "MessageCommandBuilder"
							}
						}
					]
				},
				{
					"id": 382,
					"name": "setValidateOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 170,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 383,
							"name": "setValidateOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Validate options before executing"
									}
								]
							},
							"parameters": [
								{
									"id": 384,
									"name": "validateOptions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the command options needs to be validated before executing"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 318,
								"name": "MessageCommandBuilder"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						319
					]
				},
				{
					"title": "Properties",
					"children": [
						325,
						331,
						330,
						321,
						323,
						324,
						336,
						332,
						322,
						326,
						328,
						329,
						327
					]
				},
				{
					"title": "Methods",
					"children": [
						349,
						376,
						385,
						361,
						358,
						346,
						343,
						370,
						364,
						340,
						352,
						355,
						382
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
					"line": 35,
					"character": 13
				}
			]
		},
		{
			"id": 388,
			"name": "MessageCommandOptionBuilder",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Option builder for MessageCommandBuilder"
					}
				]
			},
			"children": [
				{
					"id": 389,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 390,
							"name": "new MessageCommandOptionBuilder",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 388,
								"name": "MessageCommandOptionBuilder"
							}
						}
					]
				},
				{
					"id": 392,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
							"line": 6,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "''"
				},
				{
					"id": 391,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
							"line": 5,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "''"
				},
				{
					"id": 393,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
							"line": 7,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 394,
					"name": "validator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
							"line": 8,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 395,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
									"line": 8,
									"character": 22
								}
							],
							"signatures": [
								{
									"id": 396,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 397,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 401,
					"name": "setDescription",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
							"line": 24,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 402,
							"name": "setDescription",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set command option description"
									}
								]
							},
							"parameters": [
								{
									"id": 403,
									"name": "description",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Option description"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 388,
								"name": "MessageCommandOptionBuilder"
							}
						}
					]
				},
				{
					"id": 398,
					"name": "setName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
							"line": 14,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 399,
							"name": "setName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set command option name"
									}
								]
							},
							"parameters": [
								{
									"id": 400,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Option name"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 388,
								"name": "MessageCommandOptionBuilder"
							}
						}
					]
				},
				{
					"id": 404,
					"name": "setRequired",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
							"line": 34,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 405,
							"name": "setRequired",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set if this option is required"
									}
								]
							},
							"parameters": [
								{
									"id": 406,
									"name": "required",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if this option is required"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 388,
								"name": "MessageCommandOptionBuilder"
							}
						}
					]
				},
				{
					"id": 407,
					"name": "setValidator",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
							"line": 44,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 408,
							"name": "setValidator",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set your custom function to validate given value for this option"
									}
								]
							},
							"parameters": [
								{
									"id": 409,
									"name": "validator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Custom function to validate value given for this option"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 410,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
													"line": 44,
													"character": 35
												}
											],
											"signatures": [
												{
													"id": 411,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 412,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 388,
								"name": "MessageCommandOptionBuilder"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						389
					]
				},
				{
					"title": "Properties",
					"children": [
						392,
						391,
						393,
						394
					]
				},
				{
					"title": "Methods",
					"children": [
						401,
						398,
						404,
						407
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/builders/MessageCommandOptionBuilder.ts",
					"line": 4,
					"character": 13
				}
			]
		},
		{
			"id": 34,
			"name": "MessageCommandOptionManager",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Validated message options manager"
					}
				]
			},
			"children": [
				{
					"id": 35,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/MessageCommandOptionManager.ts",
							"line": 10,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 36,
							"name": "new MessageCommandOptionManager",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 37,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Validated options"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 312,
											"name": "MessageCommandValidatedOption"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 34,
								"name": "MessageCommandOptionManager"
							},
							"overwrites": {
								"type": "reference",
								"name": "Array<MessageCommandValidatedOption>.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Array<MessageCommandValidatedOption>.constructor"
					}
				},
				{
					"id": 38,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/MessageCommandOptionManager.ts",
							"line": 20,
							"character": 11
						},
						{
							"fileName": "src/reciple/classes/MessageCommandOptionManager.ts",
							"line": 21,
							"character": 11
						},
						{
							"fileName": "src/reciple/classes/MessageCommandOptionManager.ts",
							"line": 22,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 39,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the option info"
									}
								]
							},
							"parameters": [
								{
									"id": 40,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Option name"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41,
									"name": "requied",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Is the option required"
											}
										]
									},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 312,
								"name": "MessageCommandValidatedOption"
							}
						},
						{
							"id": 42,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 43,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 44,
									"name": "requied",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"id": 312,
										"name": "MessageCommandValidatedOption"
									}
								]
							}
						}
					]
				},
				{
					"id": 45,
					"name": "getValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/MessageCommandOptionManager.ts",
							"line": 34,
							"character": 11
						},
						{
							"fileName": "src/reciple/classes/MessageCommandOptionManager.ts",
							"line": 35,
							"character": 11
						},
						{
							"fileName": "src/reciple/classes/MessageCommandOptionManager.ts",
							"line": 36,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 46,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the option value"
									}
								]
							},
							"parameters": [
								{
									"id": 47,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Option name"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 48,
									"name": "requied",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Is the option required"
											}
										]
									},
									"type": {
										"type": "literal",
										"value": true
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 49,
							"name": "getValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 50,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 51,
									"name": "requied",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						35
					]
				},
				{
					"title": "Methods",
					"children": [
						38,
						45
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/MessageCommandOptionManager.ts",
					"line": 6,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 312,
							"name": "MessageCommandValidatedOption"
						}
					],
					"name": "Array",
					"qualifiedName": "Array",
					"package": "typescript"
				}
			]
		},
		{
			"id": 67,
			"name": "RecipleClient",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 68,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 75,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 69,
							"name": "new RecipleClient",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 70,
									"name": "Ready",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"default": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"parameters": [
								{
									"id": 71,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Client options"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 52,
										"name": "RecipleClientOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 67,
								"typeArguments": [
									{
										"type": "reference",
										"id": 70,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client<Ready>.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client<Ready>.constructor"
					}
				},
				{
					"id": 137,
					"name": "commandCooldowns",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 67,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 8,
						"name": "CommandCooldownManager"
					},
					"defaultValue": "..."
				},
				{
					"id": 135,
					"name": "commands",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 65,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 54,
						"name": "RecipleClientCommands"
					},
					"defaultValue": "..."
				},
				{
					"id": 134,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 64,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 193,
						"name": "Config"
					},
					"defaultValue": "..."
				},
				{
					"id": 139,
					"name": "logger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 69,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"name": "Logger",
						"qualifiedName": "Logger",
						"package": "fallout-utility"
					}
				},
				{
					"id": 138,
					"name": "modules",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 68,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 516,
							"name": "RecipleModule"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 136,
					"name": "otherApplicationCommandData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 66,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"id": 541,
									"name": "ApplicationCommandBuilder"
								},
								{
									"type": "reference",
									"name": "ApplicationCommandData",
									"qualifiedName": "ApplicationCommandData",
									"package": "discord.js"
								}
							]
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 140,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 70,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "version"
				},
				{
					"id": 185,
					"name": "_commandExecuteError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 434,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 186,
							"name": "_commandExecuteError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Error message when a command fails to execute"
									}
								]
							},
							"parameters": [
								{
									"id": 187,
									"name": "err",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Received error"
											}
										]
									},
									"type": {
										"type": "reference",
										"name": "Error",
										"qualifiedName": "Error",
										"package": "typescript"
									}
								},
								{
									"id": 188,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Interaction/Message command execute data"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 414,
										"name": "RecipleCommandBuildersExecuteData"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 178,
					"name": "_haltCommand",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 408,
							"character": 18
						},
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 409,
							"character": 18
						},
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 410,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 179,
							"name": "_haltCommand",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Executes command halt function"
									}
								]
							},
							"parameters": [
								{
									"id": 180,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Halted command's builder"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 265,
										"name": "InteractionCommandBuilder"
									}
								},
								{
									"id": 181,
									"name": "haltData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Halted command's data"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 418,
										"typeArguments": [
											{
												"type": "reference",
												"id": 265,
												"name": "InteractionCommandBuilder"
											}
										],
										"name": "RecipleHaltedCommandData"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 182,
							"name": "_haltCommand",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 183,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 318,
										"name": "MessageCommandBuilder"
									}
								},
								{
									"id": 184,
									"name": "haltData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 418,
										"typeArguments": [
											{
												"type": "reference",
												"id": 318,
												"name": "MessageCommandBuilder"
											}
										],
										"name": "RecipleHaltedCommandData"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 175,
					"name": "_replyError",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 399,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 176,
							"name": "_replyError",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emits the \"recipleReplyError\" event"
									}
								]
							},
							"parameters": [
								{
									"id": 177,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Received Error"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 149,
					"name": "addCommand",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 178,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 150,
							"name": "addCommand",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add interaction or message command to client"
									}
								]
							},
							"parameters": [
								{
									"id": 151,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Interaction/Message command builder"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 413,
										"name": "RecipleCommandBuilder"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 67,
								"typeArguments": [
									{
										"type": "reference",
										"id": 70,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							}
						}
					]
				},
				{
					"id": 152,
					"name": "addCommandListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 193,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 153,
							"name": "addCommandListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Listed to command executions"
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 67,
								"typeArguments": [
									{
										"type": "reference",
										"id": 70,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							}
						}
					]
				},
				{
					"id": 146,
					"name": "addModule",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 145,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 147,
							"name": "addModule",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add module"
									}
								]
							},
							"parameters": [
								{
									"id": 148,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Module options"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 463,
										"name": "RecipleAddModuleOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 102,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 51,
							"character": 4
						},
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 52,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 103,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 104,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 63,
											"name": "RecipleClientEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 105,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 104,
										"name": "E"
									}
								},
								{
									"id": 106,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 104,
											"name": "E"
										},
										"objectType": {
											"type": "reference",
											"id": 63,
											"name": "RecipleClientEvents"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.emit"
							}
						},
						{
							"id": 107,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 108,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 109,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 108,
												"name": "E"
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 63,
													"name": "RecipleClientEvents"
												}
											}
										],
										"name": "Exclude",
										"qualifiedName": "Exclude",
										"package": "typescript"
									}
								},
								{
									"id": 110,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.emit"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Client.emit"
					}
				},
				{
					"id": 166,
					"name": "findCommand",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 371,
							"character": 11
						},
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 372,
							"character": 11
						},
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 373,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 167,
							"name": "findCommand",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get command builder by name or alias if it's a message command"
									}
								]
							},
							"parameters": [
								{
									"id": 168,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Command name"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 169,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Command type"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 416,
										"name": "MessageCommand"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 318,
										"name": "MessageCommandBuilder"
									}
								]
							}
						},
						{
							"id": 170,
							"name": "findCommand",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 171,
									"name": "command",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 172,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 417,
										"name": "InteractionCommand"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"id": 265,
										"name": "InteractionCommandBuilder"
									}
								]
							}
						}
					]
				},
				{
					"id": 161,
					"name": "getMessage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 362,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 162,
							"name": "getMessage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a message from config"
									}
								]
							},
							"typeParameter": [
								{
									"id": 163,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 164,
									"name": "messageKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Config messages key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 165,
									"name": "defaultMessage",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Default message when the key does not exists"
											}
										]
									},
									"type": {
										"type": "reference",
										"id": 163,
										"name": "T"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 163,
								"name": "T"
							}
						}
					]
				},
				{
					"id": 158,
					"name": "interactionCommandExecute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 296,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 159,
							"name": "interactionCommandExecute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Execute an Interaction command"
									}
								]
							},
							"parameters": [
								{
									"id": 160,
									"name": "interaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Command Interaction"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "CacheType",
												"qualifiedName": "CacheType",
												"package": "discord.js"
											}
										],
										"name": "Interaction",
										"qualifiedName": "Interaction",
										"package": "discord.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"id": 261,
												"name": "InteractionCommandExecuteData"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 173,
					"name": "isClientLogsEnabled",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 391,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 174,
							"name": "isClientLogsEnabled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns true if client logs is enabled"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 132,
					"name": "isReady",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 60,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 133,
							"name": "isReady",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"id": 67,
									"typeArguments": [
										{
											"type": "literal",
											"value": true
										}
									],
									"name": "RecipleClient"
								}
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.isReady"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Client.isReady"
					}
				},
				{
					"id": 144,
					"name": "loadModules",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 103,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 145,
							"name": "loadModules",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Execute "
									},
									{
										"kind": "code",
										"text": "`onLoad()`"
									},
									{
										"kind": "text",
										"text": " from client modules and register interaction commands if enabled"
									}
								]
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 67,
										"typeArguments": [
											{
												"type": "reference",
												"id": 70,
												"name": "Ready"
											}
										],
										"name": "RecipleClient"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 154,
					"name": "messageCommandExecute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 205,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 155,
							"name": "messageCommandExecute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Execute a Message command"
									}
								]
							},
							"parameters": [
								{
									"id": 156,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Message command executor"
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Message",
										"qualifiedName": "Message",
										"package": "discord.js"
									}
								},
								{
									"id": 157,
									"name": "prefix",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Message command prefix"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"id": 306,
												"name": "MessageCommandExecuteData"
											}
										]
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 111,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 54,
							"character": 4
						},
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 55,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 112,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 113,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 63,
											"name": "RecipleClientEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 114,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 113,
										"name": "E"
									}
								},
								{
									"id": 115,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 116,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleClient.ts",
													"line": 54,
													"character": 65
												}
											],
											"signatures": [
												{
													"id": 117,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 118,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"id": 113,
																	"name": "E"
																},
																"objectType": {
																	"type": "reference",
																	"id": 63,
																	"name": "RecipleClientEvents"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 67,
								"typeArguments": [
									{
										"type": "reference",
										"id": 70,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.off"
							}
						},
						{
							"id": 119,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 120,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 121,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 120,
												"name": "E"
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 63,
													"name": "RecipleClientEvents"
												}
											}
										],
										"name": "Exclude",
										"qualifiedName": "Exclude",
										"package": "typescript"
									}
								},
								{
									"id": 122,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 123,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleClient.ts",
													"line": 55,
													"character": 89
												}
											],
											"signatures": [
												{
													"id": 124,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 125,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 67,
								"typeArguments": [
									{
										"type": "reference",
										"id": 70,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.off"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Client.off"
					}
				},
				{
					"id": 72,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 45,
							"character": 4
						},
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 46,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 73,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 74,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 63,
											"name": "RecipleClientEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 75,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 74,
										"name": "E"
									}
								},
								{
									"id": 76,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 77,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleClient.ts",
													"line": 45,
													"character": 64
												}
											],
											"signatures": [
												{
													"id": 78,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 79,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"id": 74,
																	"name": "E"
																},
																"objectType": {
																	"type": "reference",
																	"id": 63,
																	"name": "RecipleClientEvents"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 67,
								"typeArguments": [
									{
										"type": "reference",
										"id": 70,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.on"
							}
						},
						{
							"id": 80,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 81,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 82,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 81,
												"name": "E"
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 63,
													"name": "RecipleClientEvents"
												}
											}
										],
										"name": "Exclude",
										"qualifiedName": "Exclude",
										"package": "typescript"
									}
								},
								{
									"id": 83,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 84,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleClient.ts",
													"line": 46,
													"character": 88
												}
											],
											"signatures": [
												{
													"id": 85,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 86,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 67,
								"typeArguments": [
									{
										"type": "reference",
										"id": 70,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.on"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Client.on"
					}
				},
				{
					"id": 87,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 48,
							"character": 4
						},
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 49,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 88,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 89,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 63,
											"name": "RecipleClientEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 90,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 89,
										"name": "E"
									}
								},
								{
									"id": 91,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 92,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleClient.ts",
													"line": 48,
													"character": 66
												}
											],
											"signatures": [
												{
													"id": 93,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 94,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"id": 89,
																	"name": "E"
																},
																"objectType": {
																	"type": "reference",
																	"id": 63,
																	"name": "RecipleClientEvents"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 67,
								"typeArguments": [
									{
										"type": "reference",
										"id": 70,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.once"
							}
						},
						{
							"id": 95,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 96,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											},
											{
												"type": "literal",
												"value": "length"
											},
											{
												"type": "literal",
												"value": "toString"
											},
											{
												"type": "literal",
												"value": "concat"
											},
											{
												"type": "literal",
												"value": "slice"
											},
											{
												"type": "literal",
												"value": "indexOf"
											},
											{
												"type": "literal",
												"value": "lastIndexOf"
											},
											{
												"type": "literal",
												"value": "includes"
											},
											{
												"type": "literal",
												"value": "at"
											},
											{
												"type": "literal",
												"value": "valueOf"
											},
											{
												"type": "literal",
												"value": "charAt"
											},
											{
												"type": "literal",
												"value": "charCodeAt"
											},
											{
												"type": "literal",
												"value": "localeCompare"
											},
											{
												"type": "literal",
												"value": "match"
											},
											{
												"type": "literal",
												"value": "replace"
											},
											{
												"type": "literal",
												"value": "search"
											},
											{
												"type": "literal",
												"value": "split"
											},
											{
												"type": "literal",
												"value": "substring"
											},
											{
												"type": "literal",
												"value": "toLowerCase"
											},
											{
												"type": "literal",
												"value": "toLocaleLowerCase"
											},
											{
												"type": "literal",
												"value": "toUpperCase"
											},
											{
												"type": "literal",
												"value": "toLocaleUpperCase"
											},
											{
												"type": "literal",
												"value": "trim"
											},
											{
												"type": "literal",
												"value": "substr"
											},
											{
												"type": "literal",
												"value": "codePointAt"
											},
											{
												"type": "literal",
												"value": "endsWith"
											},
											{
												"type": "literal",
												"value": "normalize"
											},
											{
												"type": "literal",
												"value": "repeat"
											},
											{
												"type": "literal",
												"value": "startsWith"
											},
											{
												"type": "literal",
												"value": "anchor"
											},
											{
												"type": "literal",
												"value": "big"
											},
											{
												"type": "literal",
												"value": "blink"
											},
											{
												"type": "literal",
												"value": "bold"
											},
											{
												"type": "literal",
												"value": "fixed"
											},
											{
												"type": "literal",
												"value": "fontcolor"
											},
											{
												"type": "literal",
												"value": "fontsize"
											},
											{
												"type": "literal",
												"value": "italics"
											},
											{
												"type": "literal",
												"value": "link"
											},
											{
												"type": "literal",
												"value": "small"
											},
											{
												"type": "literal",
												"value": "strike"
											},
											{
												"type": "literal",
												"value": "sub"
											},
											{
												"type": "literal",
												"value": "sup"
											},
											{
												"type": "literal",
												"value": "padStart"
											},
											{
												"type": "literal",
												"value": "padEnd"
											},
											{
												"type": "literal",
												"value": "trimEnd"
											},
											{
												"type": "literal",
												"value": "trimStart"
											},
											{
												"type": "literal",
												"value": "trimLeft"
											},
											{
												"type": "literal",
												"value": "trimRight"
											},
											{
												"type": "literal",
												"value": "matchAll"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 97,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 96,
												"name": "E"
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"id": 63,
													"name": "RecipleClientEvents"
												}
											}
										],
										"name": "Exclude",
										"qualifiedName": "Exclude",
										"package": "typescript"
									}
								},
								{
									"id": 98,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 99,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleClient.ts",
													"line": 49,
													"character": 96
												}
											],
											"signatures": [
												{
													"id": 100,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 101,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Awaitable",
														"qualifiedName": "Awaitable",
														"package": "discord.js"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 67,
								"typeArguments": [
									{
										"type": "reference",
										"id": 70,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.once"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Client.once"
					}
				},
				{
					"id": 126,
					"name": "removeAllListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 57,
							"character": 4
						},
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 58,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 127,
							"name": "removeAllListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 128,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 63,
											"name": "RecipleClientEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 129,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 128,
										"name": "E"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 67,
								"typeArguments": [
									{
										"type": "reference",
										"id": 70,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.removeAllListeners"
							}
						},
						{
							"id": 130,
							"name": "removeAllListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 131,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 67,
								"typeArguments": [
									{
										"type": "reference",
										"id": 70,
										"name": "Ready"
									}
								],
								"name": "RecipleClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.removeAllListeners"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Client.removeAllListeners"
					}
				},
				{
					"id": 141,
					"name": "startModules",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 90,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 142,
							"name": "startModules",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Load modules from modules folder"
									}
								]
							},
							"parameters": [
								{
									"id": 143,
									"name": "folder",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Modules folder"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 67,
										"typeArguments": [
											{
												"type": "reference",
												"id": 70,
												"name": "Ready"
											}
										],
										"name": "RecipleClient"
									}
								],
								"name": "Promise",
								"qualifiedName": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						68
					]
				},
				{
					"title": "Properties",
					"children": [
						137,
						135,
						134,
						139,
						138,
						136,
						140
					]
				},
				{
					"title": "Methods",
					"children": [
						185,
						178,
						175,
						149,
						152,
						146,
						102,
						166,
						161,
						158,
						173,
						132,
						144,
						154,
						111,
						72,
						87,
						126,
						141
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/RecipleClient.ts",
					"line": 44,
					"character": 17
				},
				{
					"fileName": "src/reciple/classes/RecipleClient.ts",
					"line": 63,
					"character": 13
				}
			],
			"typeParameters": [
				{
					"id": 189,
					"name": "Ready",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"default": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 70,
							"name": "Ready"
						}
					],
					"name": "Client",
					"qualifiedName": "Client",
					"package": "discord.js"
				}
			]
		},
		{
			"id": 241,
			"name": "RecipleConfig",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Create/parse reciple config"
					}
				]
			},
			"children": [
				{
					"id": 245,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 81,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 246,
							"name": "new RecipleConfig",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 247,
									"name": "configPath",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Path to config"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 241,
								"name": "RecipleConfig"
							}
						}
					]
				},
				{
					"id": 248,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 74,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 193,
						"name": "Config"
					},
					"defaultValue": "..."
				},
				{
					"id": 249,
					"name": "configPath",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 75,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'./reciple.yml'"
				},
				{
					"id": 242,
					"name": "defaultConfigPath",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 76,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				},
				{
					"id": 259,
					"name": "askToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 159,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 260,
							"name": "askToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Ask for a token"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 252,
					"name": "getConfig",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 121,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 253,
							"name": "getConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the parsed config file"
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 193,
								"name": "Config"
							}
						}
					]
				},
				{
					"id": 257,
					"name": "isSupportedConfig",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 152,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 258,
							"name": "isSupportedConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if the config version is supported"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 250,
					"name": "parseConfig",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 89,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 251,
							"name": "parseConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Parse the config file"
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 241,
								"name": "RecipleConfig"
							}
						}
					]
				},
				{
					"id": 254,
					"name": "parseToken",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 132,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 255,
							"name": "parseToken",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Parse token from config"
									}
								]
							},
							"parameters": [
								{
									"id": 256,
									"name": "askIfNull",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Ask for token if the token is null/undefined"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 243,
					"name": "getDefaultConfig",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 166,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 244,
							"name": "getDefaultConfig",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get default config"
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 193,
								"name": "Config"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						245
					]
				},
				{
					"title": "Properties",
					"children": [
						248,
						249,
						242
					]
				},
				{
					"title": "Methods",
					"children": [
						259,
						252,
						257,
						250,
						254,
						243
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/RecipleConfig.ts",
					"line": 73,
					"character": 13
				}
			]
		},
		{
			"id": 505,
			"name": "RecipleScript",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Reciple script object interface"
					}
				]
			},
			"children": [
				{
					"id": 506,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 507,
							"name": "new RecipleScript",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 505,
								"name": "RecipleScript"
							}
						}
					]
				},
				{
					"id": 509,
					"name": "commands",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/reciple/modules.ts",
							"line": 16,
							"character": 11
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 413,
							"name": "RecipleCommandBuilder"
						}
					}
				},
				{
					"id": 508,
					"name": "versions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/modules.ts",
							"line": 15,
							"character": 11
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 510,
					"name": "onLoad",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/reciple/modules.ts",
							"line": 17,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 511,
							"name": "onLoad",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 512,
									"name": "reciple",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 67,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "RecipleClient"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				},
				{
					"id": 513,
					"name": "onStart",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/reciple/modules.ts",
							"line": 18,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 514,
							"name": "onStart",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 515,
									"name": "reciple",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 67,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "RecipleClient"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"qualifiedName": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						506
					]
				},
				{
					"title": "Properties",
					"children": [
						509,
						508
					]
				},
				{
					"title": "Methods",
					"children": [
						510,
						513
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/modules.ts",
					"line": 14,
					"character": 21
				}
			]
		},
		{
			"id": 193,
			"name": "Config",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Reciple config object interface"
					}
				]
			},
			"children": [
				{
					"id": 233,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 61,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "ClientOptions",
						"qualifiedName": "ClientOptions",
						"package": "discord.js"
					}
				},
				{
					"id": 195,
					"name": "commands",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 196,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 209,
									"name": "interactionCommand",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/RecipleConfig.ts",
											"line": 36,
											"character": 8
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 210,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 214,
													"name": "enableCooldown",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/RecipleConfig.ts",
															"line": 40,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 211,
													"name": "enabled",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/RecipleConfig.ts",
															"line": 37,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 216,
													"name": "guilds",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/reciple/classes/RecipleConfig.ts",
															"line": 42,
															"character": 12
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														]
													}
												},
												{
													"id": 217,
													"name": "permissions",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/RecipleConfig.ts",
															"line": 43,
															"character": 12
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 218,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 220,
																	"name": "commands",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/reciple/classes/RecipleConfig.ts",
																			"line": 45,
																			"character": 16
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 190,
																			"name": "ConfigCommandPermissions"
																		}
																	}
																},
																{
																	"id": 219,
																	"name": "enabled",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/reciple/classes/RecipleConfig.ts",
																			"line": 44,
																			"character": 16
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		220,
																		219
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/reciple/classes/RecipleConfig.ts",
																	"line": 43,
																	"character": 25
																}
															]
														}
													}
												},
												{
													"id": 213,
													"name": "registerCommands",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/RecipleConfig.ts",
															"line": 39,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 212,
													"name": "replyOnError",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/RecipleConfig.ts",
															"line": 38,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 215,
													"name": "setRequiredPermissions",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/RecipleConfig.ts",
															"line": 41,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														214,
														211,
														216,
														217,
														213,
														212,
														215
													]
												}
											],
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleConfig.ts",
													"line": 36,
													"character": 28
												}
											]
										}
									}
								},
								{
									"id": 197,
									"name": "messageCommand",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/RecipleConfig.ts",
											"line": 24,
											"character": 8
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 198,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 202,
													"name": "allowCommandAlias",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/RecipleConfig.ts",
															"line": 28,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 204,
													"name": "commandArgumentSeparator",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/RecipleConfig.ts",
															"line": 30,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 203,
													"name": "enableCooldown",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/RecipleConfig.ts",
															"line": 29,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 199,
													"name": "enabled",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/RecipleConfig.ts",
															"line": 25,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 205,
													"name": "permissions",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/RecipleConfig.ts",
															"line": 31,
															"character": 12
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 206,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 208,
																	"name": "commands",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/reciple/classes/RecipleConfig.ts",
																			"line": 33,
																			"character": 16
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"id": 190,
																			"name": "ConfigCommandPermissions"
																		}
																	}
																},
																{
																	"id": 207,
																	"name": "enabled",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/reciple/classes/RecipleConfig.ts",
																			"line": 32,
																			"character": 16
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		208,
																		207
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/reciple/classes/RecipleConfig.ts",
																	"line": 31,
																	"character": 25
																}
															]
														}
													}
												},
												{
													"id": 200,
													"name": "prefix",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/reciple/classes/RecipleConfig.ts",
															"line": 26,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 201,
													"name": "replyOnError",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/reciple/classes/RecipleConfig.ts",
															"line": 27,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														202,
														204,
														203,
														199,
														205,
														200,
														201
													]
												}
											],
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleConfig.ts",
													"line": 24,
													"character": 24
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										209,
										197
									]
								}
							],
							"sources": [
								{
									"fileName": "src/reciple/classes/RecipleConfig.ts",
									"line": 23,
									"character": 14
								}
							]
						}
					}
				},
				{
					"id": 226,
					"name": "fileLogging",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 54,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 227,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 230,
									"name": "clientLogs",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/RecipleConfig.ts",
											"line": 57,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 229,
									"name": "debugmode",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/RecipleConfig.ts",
											"line": 56,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 228,
									"name": "enabled",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/RecipleConfig.ts",
											"line": 55,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 232,
									"name": "logFilePath",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/RecipleConfig.ts",
											"line": 59,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 231,
									"name": "stringifyLoggedJSON",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/RecipleConfig.ts",
											"line": 58,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										230,
										229,
										228,
										232,
										231
									]
								}
							],
							"sources": [
								{
									"fileName": "src/reciple/classes/RecipleConfig.ts",
									"line": 54,
									"character": 17
								}
							]
						}
					}
				},
				{
					"id": 221,
					"name": "ignoredChannels",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 222,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 225,
									"name": "channels",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/RecipleConfig.ts",
											"line": 52,
											"character": 8
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 224,
									"name": "convertToAllowList",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/RecipleConfig.ts",
											"line": 51,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 223,
									"name": "enabled",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/classes/RecipleConfig.ts",
											"line": 50,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										225,
										224,
										223
									]
								}
							],
							"sources": [
								{
									"fileName": "src/reciple/classes/RecipleConfig.ts",
									"line": 49,
									"character": 21
								}
							]
						}
					}
				},
				{
					"id": 238,
					"name": "ignoredFiles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 65,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 234,
					"name": "messages",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 62,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 235,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/classes/RecipleConfig.ts",
									"line": 62,
									"character": 14
								}
							],
							"indexSignature": {
								"id": 236,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 237,
										"name": "messageKey",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					}
				},
				{
					"id": 239,
					"name": "modulesFolder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 66,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 194,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 240,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 67,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						233,
						195,
						226,
						221,
						238,
						234,
						239,
						194,
						240
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/RecipleConfig.ts",
					"line": 21,
					"character": 17
				}
			]
		},
		{
			"id": 190,
			"name": "ConfigCommandPermissions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Command permissions config object interface"
					}
				]
			},
			"children": [
				{
					"id": 191,
					"name": "command",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 192,
					"name": "permissions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleConfig.ts",
							"line": 15,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "PermissionResolvable",
							"qualifiedName": "PermissionResolvable",
							"package": "discord.js"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						191,
						192
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/RecipleConfig.ts",
					"line": 13,
					"character": 17
				}
			]
		},
		{
			"id": 1,
			"name": "CooledDownUser",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Object interface for cooled-down user"
					}
				]
			},
			"children": [
				{
					"id": 6,
					"name": "channel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "TextBasedChannel",
						"qualifiedName": "TextBasedChannel",
						"package": "discord.js"
					}
				},
				{
					"id": 3,
					"name": "command",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 7,
					"name": "expireTime",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5,
					"name": "guild",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Guild",
								"qualifiedName": "Guild",
								"package": "discord.js"
							}
						]
					}
				},
				{
					"id": 4,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 415,
						"name": "RecipleCommandBuilderType"
					}
				},
				{
					"id": 2,
					"name": "user",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "User",
						"qualifiedName": "User",
						"package": "discord.js"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6,
						3,
						7,
						5,
						4,
						2
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/CommandCooldownManager.ts",
					"line": 8,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 428,
					"name": "RecipleCommandCooldownData"
				}
			]
		},
		{
			"id": 261,
			"name": "InteractionCommandExecuteData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Execute data for interaction command"
					}
				]
			},
			"children": [
				{
					"id": 263,
					"name": "builder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 265,
						"name": "InteractionCommandBuilder"
					}
				},
				{
					"id": 264,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"typeArguments": [
							{
								"type": "literal",
								"value": true
							}
						],
						"name": "RecipleClient"
					}
				},
				{
					"id": 262,
					"name": "interaction",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "CacheType",
								"qualifiedName": "CacheType",
								"package": "discord.js"
							}
						],
						"name": "ChatInputCommandInteraction",
						"qualifiedName": "ChatInputCommandInteraction",
						"package": "discord.js"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						263,
						264,
						262
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/builders/InteractionCommandBuilder.ts",
					"line": 11,
					"character": 17
				}
			]
		},
		{
			"id": 306,
			"name": "MessageCommandExecuteData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Execute data for message command"
					}
				]
			},
			"children": [
				{
					"id": 310,
					"name": "builder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 318,
						"name": "MessageCommandBuilder"
					}
				},
				{
					"id": 311,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"typeArguments": [
							{
								"type": "literal",
								"value": true
							}
						],
						"name": "RecipleClient"
					}
				},
				{
					"id": 309,
					"name": "command",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 16,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "Command",
						"qualifiedName": "Command",
						"package": "fallout-utility"
					}
				},
				{
					"id": 307,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Message",
						"qualifiedName": "Message",
						"package": "discord.js"
					}
				},
				{
					"id": 308,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 15,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 34,
						"name": "MessageCommandOptionManager"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						310,
						311,
						309,
						307,
						308
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
					"line": 13,
					"character": 17
				}
			]
		},
		{
			"id": 312,
			"name": "MessageCommandValidatedOption",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Validated message command option"
					}
				]
			},
			"children": [
				{
					"id": 316,
					"name": "invalid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 317,
					"name": "missing",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 313,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 315,
					"name": "required",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 314,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						316,
						317,
						313,
						315,
						314
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
					"line": 24,
					"character": 17
				}
			]
		},
		{
			"id": 463,
			"name": "RecipleAddModuleOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 466,
					"name": "moduleInfo",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Module optional info"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/reciple/types/paramOptions.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 467,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 468,
									"name": "filename",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/reciple/modules.ts",
											"line": 27,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 470,
									"name": "path",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/reciple/modules.ts",
											"line": 29,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 469,
									"name": "versions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/modules.ts",
											"line": 28,
											"character": 8
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										468,
										470,
										469
									]
								}
							],
							"sources": [
								{
									"fileName": "src/reciple/modules.ts",
									"line": 26,
									"character": 10
								}
							]
						}
					}
				},
				{
					"id": 465,
					"name": "registerInteractionCommands",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Register interaction commands if possible"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/reciple/types/paramOptions.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 464,
					"name": "script",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Module script"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/reciple/types/paramOptions.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 505,
						"name": "RecipleScript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						466,
						465,
						464
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/types/paramOptions.ts",
					"line": 9,
					"character": 17
				}
			]
		},
		{
			"id": 54,
			"name": "RecipleClientCommands",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Reciple client commands object interface"
					}
				]
			},
			"children": [
				{
					"id": 59,
					"name": "interactionCommands",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 60,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/classes/RecipleClient.ts",
									"line": 29,
									"character": 25
								}
							],
							"indexSignature": {
								"id": 61,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 62,
										"name": "commandName",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 265,
									"name": "InteractionCommandBuilder"
								}
							}
						}
					}
				},
				{
					"id": 55,
					"name": "messageCommands",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 56,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/classes/RecipleClient.ts",
									"line": 28,
									"character": 21
								}
							],
							"indexSignature": {
								"id": 57,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 58,
										"name": "commandName",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 318,
									"name": "MessageCommandBuilder"
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						59,
						55
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/RecipleClient.ts",
					"line": 27,
					"character": 17
				}
			]
		},
		{
			"id": 63,
			"name": "RecipleClientEvents",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Reciple client events"
					}
				]
			},
			"children": [
				{
					"id": 65,
					"name": "recipleInteractionCommandCreate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "executeData",
								"isOptional": false,
								"element": {
									"type": "reference",
									"id": 261,
									"name": "InteractionCommandExecuteData"
								}
							}
						]
					}
				},
				{
					"id": 64,
					"name": "recipleMessageCommandCreate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "executeData",
								"isOptional": false,
								"element": {
									"type": "reference",
									"id": 306,
									"name": "MessageCommandExecuteData"
								}
							}
						]
					}
				},
				{
					"id": 66,
					"name": "recipleReplyError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "named-tuple-member",
								"name": "error",
								"isOptional": false,
								"element": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						65,
						64,
						66
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/RecipleClient.ts",
					"line": 35,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ClientEvents",
					"qualifiedName": "ClientEvents",
					"package": "discord.js"
				}
			]
		},
		{
			"id": 52,
			"name": "RecipleClientOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "options for Reciple client"
					}
				]
			},
			"children": [
				{
					"id": 53,
					"name": "config",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/RecipleClient.ts",
							"line": 22,
							"character": 62
						}
					],
					"type": {
						"type": "reference",
						"id": 193,
						"name": "Config"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						53
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/classes/RecipleClient.ts",
					"line": 22,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "ClientOptions",
					"qualifiedName": "ClientOptions",
					"package": "discord.js"
				}
			]
		},
		{
			"id": 428,
			"name": "RecipleCommandCooldownData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Object interface for cooled-down user"
					}
				]
			},
			"children": [
				{
					"id": 435,
					"name": "channel",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "TextBasedChannel",
						"qualifiedName": "TextBasedChannel",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 6,
						"name": "CooledDownUser.channel"
					}
				},
				{
					"id": 432,
					"name": "command",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 3,
						"name": "CooledDownUser.command"
					}
				},
				{
					"id": 430,
					"name": "executeData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 12,
							"character": 85
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"id": 437,
							"name": "Builder"
						},
						"extendsType": {
							"type": "reference",
							"id": 265,
							"name": "InteractionCommandBuilder"
						},
						"trueType": {
							"type": "reference",
							"id": 261,
							"name": "InteractionCommandExecuteData"
						},
						"falseType": {
							"type": "reference",
							"id": 306,
							"name": "MessageCommandExecuteData"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 421,
						"name": "RecipleCommandHaltBaseData.executeData"
					}
				},
				{
					"id": 436,
					"name": "expireTime",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 7,
						"name": "CooledDownUser.expireTime"
					}
				},
				{
					"id": 434,
					"name": "guild",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "Guild",
								"qualifiedName": "Guild",
								"package": "discord.js"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 5,
						"name": "CooledDownUser.guild"
					}
				},
				{
					"id": 429,
					"name": "reason",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 458,
						"name": "Cooldown"
					}
				},
				{
					"id": 433,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 415,
						"name": "RecipleCommandBuilderType"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 4,
						"name": "CooledDownUser.type"
					}
				},
				{
					"id": 431,
					"name": "user",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/classes/CommandCooldownManager.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "User",
						"qualifiedName": "User",
						"package": "discord.js"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 2,
						"name": "CooledDownUser.user"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						435,
						432,
						430,
						436,
						434,
						429,
						433,
						431
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/types/commands.ts",
					"line": 16,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 437,
					"name": "Builder",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 413,
						"name": "RecipleCommandBuilder"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 420,
					"typeArguments": [
						{
							"type": "reference",
							"id": 437,
							"name": "Builder"
						}
					],
					"name": "RecipleCommandHaltBaseData"
				},
				{
					"type": "reference",
					"id": 1,
					"name": "CooledDownUser"
				}
			]
		},
		{
			"id": 423,
			"name": "RecipleCommandErrorData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 425,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 14,
							"character": 46
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 426,
					"name": "executeData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 12,
							"character": 85
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"id": 427,
							"name": "Builder"
						},
						"extendsType": {
							"type": "reference",
							"id": 265,
							"name": "InteractionCommandBuilder"
						},
						"trueType": {
							"type": "reference",
							"id": 261,
							"name": "InteractionCommandExecuteData"
						},
						"falseType": {
							"type": "reference",
							"id": 306,
							"name": "MessageCommandExecuteData"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 421,
						"name": "RecipleCommandHaltBaseData.executeData"
					}
				},
				{
					"id": 424,
					"name": "reason",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 457,
						"name": "Error"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						425,
						426,
						424
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/types/commands.ts",
					"line": 13,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 427,
					"name": "Builder",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 413,
						"name": "RecipleCommandBuilder"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 420,
					"typeArguments": [
						{
							"type": "reference",
							"id": 427,
							"name": "Builder"
						}
					],
					"name": "RecipleCommandHaltBaseData"
				}
			]
		},
		{
			"id": 420,
			"name": "RecipleCommandHaltBaseData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 421,
					"name": "executeData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 12,
							"character": 85
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"id": 422,
							"name": "Builder"
						},
						"extendsType": {
							"type": "reference",
							"id": 265,
							"name": "InteractionCommandBuilder"
						},
						"trueType": {
							"type": "reference",
							"id": 261,
							"name": "InteractionCommandExecuteData"
						},
						"falseType": {
							"type": "reference",
							"id": 306,
							"name": "MessageCommandExecuteData"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						421
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/types/commands.ts",
					"line": 12,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 422,
					"name": "Builder",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 413,
						"name": "RecipleCommandBuilder"
					}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 423,
					"name": "RecipleCommandErrorData"
				},
				{
					"type": "reference",
					"id": 428,
					"name": "RecipleCommandCooldownData"
				},
				{
					"type": "reference",
					"id": 438,
					"name": "RecipleCommandInvalidArguments"
				},
				{
					"type": "reference",
					"id": 443,
					"name": "RecipleCommandMissingArguments"
				},
				{
					"type": "reference",
					"id": 448,
					"name": "RecipleCommandMissingMemberPermissions"
				},
				{
					"type": "reference",
					"id": 452,
					"name": "RecipleCommandMissingBotPermissions"
				}
			]
		},
		{
			"id": 438,
			"name": "RecipleCommandInvalidArguments",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 441,
					"name": "executeData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 12,
							"character": 85
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"id": 442,
							"name": "Builder"
						},
						"extendsType": {
							"type": "reference",
							"id": 265,
							"name": "InteractionCommandBuilder"
						},
						"trueType": {
							"type": "reference",
							"id": 261,
							"name": "InteractionCommandExecuteData"
						},
						"falseType": {
							"type": "reference",
							"id": 306,
							"name": "MessageCommandExecuteData"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 421,
						"name": "RecipleCommandHaltBaseData.executeData"
					}
				},
				{
					"id": 440,
					"name": "invalidArguments",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 20,
							"character": 57
						}
					],
					"type": {
						"type": "reference",
						"id": 34,
						"name": "MessageCommandOptionManager"
					}
				},
				{
					"id": 439,
					"name": "reason",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 20,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 459,
						"name": "InvalidArguments"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						441,
						440,
						439
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/types/commands.ts",
					"line": 19,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 442,
					"name": "Builder",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 413,
						"name": "RecipleCommandBuilder"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 420,
					"typeArguments": [
						{
							"type": "reference",
							"id": 442,
							"name": "Builder"
						}
					],
					"name": "RecipleCommandHaltBaseData"
				}
			]
		},
		{
			"id": 443,
			"name": "RecipleCommandMissingArguments",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 446,
					"name": "executeData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 12,
							"character": 85
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"id": 447,
							"name": "Builder"
						},
						"extendsType": {
							"type": "reference",
							"id": 265,
							"name": "InteractionCommandBuilder"
						},
						"trueType": {
							"type": "reference",
							"id": 261,
							"name": "InteractionCommandExecuteData"
						},
						"falseType": {
							"type": "reference",
							"id": 306,
							"name": "MessageCommandExecuteData"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 421,
						"name": "RecipleCommandHaltBaseData.executeData"
					}
				},
				{
					"id": 445,
					"name": "missingArguments",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 23,
							"character": 57
						}
					],
					"type": {
						"type": "reference",
						"id": 34,
						"name": "MessageCommandOptionManager"
					}
				},
				{
					"id": 444,
					"name": "reason",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 460,
						"name": "MissingArguments"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						446,
						445,
						444
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/types/commands.ts",
					"line": 22,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 447,
					"name": "Builder",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 413,
						"name": "RecipleCommandBuilder"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 420,
					"typeArguments": [
						{
							"type": "reference",
							"id": 447,
							"name": "Builder"
						}
					],
					"name": "RecipleCommandHaltBaseData"
				}
			]
		},
		{
			"id": 452,
			"name": "RecipleCommandMissingBotPermissions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 454,
					"name": "executeData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 12,
							"character": 85
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"id": 455,
							"name": "Builder"
						},
						"extendsType": {
							"type": "reference",
							"id": 265,
							"name": "InteractionCommandBuilder"
						},
						"trueType": {
							"type": "reference",
							"id": 261,
							"name": "InteractionCommandExecuteData"
						},
						"falseType": {
							"type": "reference",
							"id": 306,
							"name": "MessageCommandExecuteData"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 421,
						"name": "RecipleCommandHaltBaseData.executeData"
					}
				},
				{
					"id": 453,
					"name": "reason",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 462,
						"name": "MissingBotPermissions"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						454,
						453
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/types/commands.ts",
					"line": 28,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 455,
					"name": "Builder",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 413,
						"name": "RecipleCommandBuilder"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 420,
					"typeArguments": [
						{
							"type": "reference",
							"id": 455,
							"name": "Builder"
						}
					],
					"name": "RecipleCommandHaltBaseData"
				}
			]
		},
		{
			"id": 448,
			"name": "RecipleCommandMissingMemberPermissions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 450,
					"name": "executeData",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 12,
							"character": 85
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"id": 451,
							"name": "Builder"
						},
						"extendsType": {
							"type": "reference",
							"id": 265,
							"name": "InteractionCommandBuilder"
						},
						"trueType": {
							"type": "reference",
							"id": 261,
							"name": "InteractionCommandExecuteData"
						},
						"falseType": {
							"type": "reference",
							"id": 306,
							"name": "MessageCommandExecuteData"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 421,
						"name": "RecipleCommandHaltBaseData.executeData"
					}
				},
				{
					"id": 449,
					"name": "reason",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/commands.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 461,
						"name": "MissingMemberPermissions"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						450,
						449
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/types/commands.ts",
					"line": 25,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 451,
					"name": "Builder",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 413,
						"name": "RecipleCommandBuilder"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 420,
					"typeArguments": [
						{
							"type": "reference",
							"id": 451,
							"name": "Builder"
						}
					],
					"name": "RecipleCommandHaltBaseData"
				}
			]
		},
		{
			"id": 516,
			"name": "RecipleModule",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Reciple module object interface"
					}
				]
			},
			"children": [
				{
					"id": 518,
					"name": "info",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/modules.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 519,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 520,
									"name": "filename",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/reciple/modules.ts",
											"line": 27,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 522,
									"name": "path",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/reciple/modules.ts",
											"line": 29,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 521,
									"name": "versions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/reciple/modules.ts",
											"line": 28,
											"character": 8
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										520,
										522,
										521
									]
								}
							],
							"sources": [
								{
									"fileName": "src/reciple/modules.ts",
									"line": 26,
									"character": 10
								}
							]
						}
					}
				},
				{
					"id": 517,
					"name": "script",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/modules.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 505,
						"name": "RecipleScript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						518,
						517
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/modules.ts",
					"line": 24,
					"character": 17
				}
			]
		},
		{
			"id": 471,
			"name": "RecipleRegisterInteractionCommandsOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 472,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Bot client"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/reciple/types/paramOptions.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 67,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "RecipleClient"
					}
				},
				{
					"id": 473,
					"name": "commands",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Commands to register"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/reciple/types/paramOptions.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"id": 541,
									"name": "ApplicationCommandBuilder"
								},
								{
									"type": "reference",
									"name": "ApplicationCommandData",
									"qualifiedName": "ApplicationCommandData",
									"package": "discord.js"
								}
							]
						}
					}
				},
				{
					"id": 474,
					"name": "guilds",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "PermissionResolvable\nSet guild to not register commands globally"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/reciple/types/paramOptions.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						472,
						473,
						474
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/types/paramOptions.ts",
					"line": 24,
					"character": 17
				}
			]
		},
		{
			"id": 475,
			"name": "RecipleUserHasCommandPermissionsOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 476,
					"name": "builder",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/reciple/types/paramOptions.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"id": 413,
						"name": "RecipleCommandBuilder"
					}
				},
				{
					"id": 478,
					"name": "commandPermissions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/reciple/types/paramOptions.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 479,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 481,
											"name": "commands",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleConfig.ts",
													"line": 33,
													"character": 16
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 190,
													"name": "ConfigCommandPermissions"
												}
											}
										},
										{
											"id": 480,
											"name": "enabled",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleConfig.ts",
													"line": 32,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												481,
												480
											]
										}
									],
									"sources": [
										{
											"fileName": "src/reciple/classes/RecipleConfig.ts",
											"line": 31,
											"character": 25
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 482,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 484,
											"name": "commands",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleConfig.ts",
													"line": 45,
													"character": 16
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"id": 190,
													"name": "ConfigCommandPermissions"
												}
											}
										},
										{
											"id": 483,
											"name": "enabled",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleConfig.ts",
													"line": 44,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												484,
												483
											]
										}
									],
									"sources": [
										{
											"fileName": "src/reciple/classes/RecipleConfig.ts",
											"line": 43,
											"character": 25
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 477,
					"name": "memberPermissions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/reciple/types/paramOptions.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"name": "PermissionsBitField",
						"qualifiedName": "PermissionsBitField",
						"package": "discord.js"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						476,
						478,
						477
					]
				}
			],
			"sources": [
				{
					"fileName": "src/reciple/types/paramOptions.ts",
					"line": 39,
					"character": 17
				}
			]
		},
		{
			"id": 541,
			"name": "ApplicationCommandBuilder",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/registerInteractionCommands.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 265,
						"name": "InteractionCommandBuilder"
					},
					{
						"type": "reference",
						"name": "ContextMenuCommandBuilder",
						"qualifiedName": "ContextMenuCommandBuilder",
						"package": "@discordjs/builders"
					},
					{
						"type": "reference",
						"name": "SlashCommandBuilder",
						"qualifiedName": "SlashCommandBuilder",
						"package": "@discordjs/builders"
					}
				]
			}
		},
		{
			"id": 501,
			"name": "LoadedModules",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/modules.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 502,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 503,
							"name": "commands",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/modules.ts",
									"line": 9,
									"character": 30
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 413,
									"name": "RecipleCommandBuilder"
								}
							}
						},
						{
							"id": 504,
							"name": "modules",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/reciple/modules.ts",
									"line": 9,
									"character": 65
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 516,
									"name": "RecipleModule"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								503,
								504
							]
						}
					],
					"sources": [
						{
							"fileName": "src/reciple/modules.ts",
							"line": 9,
							"character": 28
						}
					]
				}
			}
		},
		{
			"id": 413,
			"name": "RecipleCommandBuilder",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Reciple command builders"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/reciple/types/builders.ts",
					"line": 7,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 318,
						"name": "MessageCommandBuilder"
					},
					{
						"type": "reference",
						"id": 265,
						"name": "InteractionCommandBuilder"
					}
				]
			}
		},
		{
			"id": 414,
			"name": "RecipleCommandBuildersExecuteData",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Reciple command builders execute data"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/reciple/types/builders.ts",
					"line": 11,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 261,
						"name": "InteractionCommandExecuteData"
					},
					{
						"type": "reference",
						"id": 306,
						"name": "MessageCommandExecuteData"
					}
				]
			}
		},
		{
			"id": 418,
			"name": "RecipleHaltedCommandData",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Halted command's data"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/reciple/types/commands.ts",
					"line": 10,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 419,
					"name": "Builder",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 413,
						"name": "RecipleCommandBuilder"
					},
					"default": {
						"type": "reference",
						"id": 413,
						"name": "RecipleCommandBuilder"
					}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"id": 423,
						"typeArguments": [
							{
								"type": "reference",
								"id": 419,
								"name": "Builder"
							}
						],
						"name": "RecipleCommandErrorData"
					},
					{
						"type": "reference",
						"id": 428,
						"typeArguments": [
							{
								"type": "reference",
								"id": 419,
								"name": "Builder"
							}
						],
						"name": "RecipleCommandCooldownData"
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"id": 419,
							"name": "Builder"
						},
						"extendsType": {
							"type": "reference",
							"id": 265,
							"name": "InteractionCommandBuilder"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "never"
						},
						"falseType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"id": 438,
									"typeArguments": [
										{
											"type": "reference",
											"id": 419,
											"name": "Builder"
										}
									],
									"name": "RecipleCommandInvalidArguments"
								},
								{
									"type": "reference",
									"id": 443,
									"typeArguments": [
										{
											"type": "reference",
											"id": 419,
											"name": "Builder"
										}
									],
									"name": "RecipleCommandMissingArguments"
								}
							]
						}
					},
					{
						"type": "reference",
						"id": 448,
						"typeArguments": [
							{
								"type": "reference",
								"id": 419,
								"name": "Builder"
							}
						],
						"name": "RecipleCommandMissingMemberPermissions"
					},
					{
						"type": "reference",
						"id": 452,
						"typeArguments": [
							{
								"type": "reference",
								"id": 419,
								"name": "Builder"
							}
						],
						"name": "RecipleCommandMissingBotPermissions"
					}
				]
			}
		},
		{
			"id": 485,
			"name": "flags",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Used flags"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/reciple/flags.ts",
					"line": 6,
					"character": 13
				}
			],
			"type": {
				"type": "reference",
				"name": "OptionValues",
				"qualifiedName": "OptionValues",
				"package": "commander"
			},
			"defaultValue": "..."
		},
		{
			"id": 486,
			"name": "token",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Temporary token flag"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/reciple/flags.ts",
					"line": 16,
					"character": 13
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					}
				]
			},
			"defaultValue": "flags.token"
		},
		{
			"id": 552,
			"name": "version",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Current reciple version"
					}
				]
			},
			"sources": [
				{
					"fileName": "src/reciple/version.ts",
					"line": 6,
					"character": 13
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			},
			"defaultValue": "..."
		},
		{
			"id": 526,
			"name": "botHasExecutePermissions",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/permissions.ts",
					"line": 27,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 527,
					"name": "botHasExecutePermissions",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Check if the bot has the required permissions in a guild"
							}
						]
					},
					"parameters": [
						{
							"id": 528,
							"name": "guild",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Guild"
									}
								]
							},
							"type": {
								"type": "reference",
								"name": "Guild",
								"qualifiedName": "Guild",
								"package": "discord.js"
							}
						},
						{
							"id": 529,
							"name": "requiredPermissions",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Required guild bot permissions"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "PermissionResolvable",
									"qualifiedName": "PermissionResolvable",
									"package": "discord.js"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 487,
			"name": "createLogger",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/logger.ts",
					"line": 12,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 488,
					"name": "createLogger",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create new logger"
							}
						]
					},
					"parameters": [
						{
							"id": 489,
							"name": "stringifyJSON",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "stringify json objects in console"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 490,
							"name": "debugmode",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "display debug messages"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 491,
							"name": "colorizeMessage",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "add logger colours to messages"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						}
					],
					"type": {
						"type": "reference",
						"name": "Logger",
						"qualifiedName": "Logger",
						"package": "fallout-utility"
					}
				}
			]
		},
		{
			"id": 530,
			"name": "isIgnoredChannel",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/permissions.ts",
					"line": 38,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 531,
					"name": "isIgnoredChannel",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Check if the channel id is ignored in config file"
							}
						]
					},
					"parameters": [
						{
							"id": 532,
							"name": "channelId",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check if channel id is in ignore list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 533,
							"name": "ignoredChannelsConfig",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Ignored channels config"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 534,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 537,
											"name": "channels",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleConfig.ts",
													"line": 52,
													"character": 8
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 536,
											"name": "convertToAllowList",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleConfig.ts",
													"line": 51,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 535,
											"name": "enabled",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "src/reciple/classes/RecipleConfig.ts",
													"line": 50,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												537,
												536,
												535
											]
										}
									],
									"sources": [
										{
											"fileName": "src/reciple/classes/RecipleConfig.ts",
											"line": 49,
											"character": 21
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 548,
			"name": "isSupportedVersion",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/version.ts",
					"line": 30,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 549,
					"name": "isSupportedVersion",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Check if the given version is supported by the given version range"
							}
						]
					},
					"parameters": [
						{
							"id": 550,
							"name": "versionRange",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Version range"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 551,
							"name": "supportedVersion",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Version to match given version range"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 542,
			"name": "isValidVersion",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/version.ts",
					"line": 12,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 543,
					"name": "isValidVersion",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Check if the version is valid"
							}
						]
					},
					"parameters": [
						{
							"id": 544,
							"name": "ver",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Version string to validated"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 497,
			"name": "loadModules",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/modules.ts",
					"line": 38,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 498,
					"name": "loadModules",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Load modules from folder"
							}
						]
					},
					"parameters": [
						{
							"id": 499,
							"name": "client",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reciple client"
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 67,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "RecipleClient"
							}
						},
						{
							"id": 500,
							"name": "folder",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Modules folder"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 501,
								"name": "LoadedModules"
							}
						],
						"name": "Promise",
						"qualifiedName": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 492,
			"name": "logger",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/logger.ts",
					"line": 40,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 493,
					"name": "logger",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create new logger"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Use "
									},
									{
										"kind": "code",
										"text": "`createLogger`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 494,
							"name": "stringifyJSON",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "stringify json objects in console"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 495,
							"name": "debugmode",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "display debug messages"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 496,
							"name": "colorizeMessage",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "add logger colours to messages"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						}
					],
					"type": {
						"type": "reference",
						"name": "Logger",
						"qualifiedName": "Logger",
						"package": "fallout-utility"
					}
				}
			]
		},
		{
			"id": 545,
			"name": "parseVersion",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/version.ts",
					"line": 20,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 546,
					"name": "parseVersion",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Parse the version string"
							}
						]
					},
					"parameters": [
						{
							"id": 547,
							"name": "ver",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Parse version string"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"name": "SemVer",
								"qualifiedName": "SemVer",
								"package": "@types/semver"
							}
						]
					}
				}
			]
		},
		{
			"id": 538,
			"name": "registerInteractionCommands",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/registerInteractionCommands.ts",
					"line": 14,
					"character": 22
				}
			],
			"signatures": [
				{
					"id": 539,
					"name": "registerInteractionCommands",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Register interaction commands"
							}
						]
					},
					"parameters": [
						{
							"id": 540,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Register interaction commands options"
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 471,
								"name": "RecipleRegisterInteractionCommandsOptions"
							}
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise",
						"qualifiedName": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 523,
			"name": "userHasCommandPermissions",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/permissions.ts",
					"line": 10,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 524,
					"name": "userHasCommandPermissions",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Check if the user has permissions to execute the given command name"
							}
						]
					},
					"parameters": [
						{
							"id": 525,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "options"
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 475,
								"name": "RecipleUserHasCommandPermissionsOptions"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 302,
			"name": "validateMessageCommandOptions",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/reciple/classes/builders/MessageCommandBuilder.ts",
					"line": 187,
					"character": 16
				}
			],
			"signatures": [
				{
					"id": 303,
					"name": "validateMessageCommandOptions",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 304,
							"name": "builder",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 318,
								"name": "MessageCommandBuilder"
							}
						},
						{
							"id": 305,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "Command",
								"qualifiedName": "Command",
								"package": "fallout-utility"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 34,
						"name": "MessageCommandOptionManager"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				415,
				456
			]
		},
		{
			"title": "Classes",
			"children": [
				8,
				265,
				318,
				388,
				34,
				67,
				241,
				505
			]
		},
		{
			"title": "Interfaces",
			"children": [
				193,
				190,
				1,
				261,
				306,
				312,
				463,
				54,
				63,
				52,
				428,
				423,
				420,
				438,
				443,
				452,
				448,
				516,
				471,
				475
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				541,
				501,
				413,
				414,
				418
			]
		},
		{
			"title": "Variables",
			"children": [
				485,
				486,
				552
			]
		},
		{
			"title": "Functions",
			"children": [
				526,
				487,
				530,
				548,
				542,
				497,
				492,
				545,
				538,
				523,
				302
			]
		}
	],
	"sources": [
		{
			"fileName": "src/index.ts",
			"line": 1,
			"character": 0
		}
	]
}